// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Zags.OrganizationService.AcceptanceTests.Specflow.Standard
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class OrganizationFeature : Xunit.IClassFixture<OrganizationFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Organization.feature"
#line hidden
        
        public OrganizationFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Organization", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(OrganizationFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="When searching a organization by Raison Sociale check that matching person is ret" +
            "urned")]
        [Xunit.TraitAttribute("FeatureTitle", "Organization")]
        [Xunit.TraitAttribute("Description", "When searching a organization by Raison Sociale check that matching person is ret" +
            "urned")]
        [Xunit.TraitAttribute("Category", "IntegrationTest,")]
        [Xunit.TraitAttribute("Category", "Organization")]
        public virtual void WhenSearchingAOrganizationByRaisonSocialeCheckThatMatchingPersonIsReturned()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching a organization by Raison Sociale check that matching person is ret" +
                    "urned", new string[] {
                        "IntegrationTest,",
                        "Organization"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RaisonSociale",
                        "Reference",
                        "Effectif",
                        "FormeJuridique"});
            table1.AddRow(new string[] {
                        "The First Test Company",
                        "C37805E9-6D6B-49BF-B667-B74ABBC34D13",
                        "50",
                        "SARL"});
#line 5
 testRunner.Given("I create a new organization with following data:", ((string)(null)), table1, "Given ");
#line 8
 testRunner.And("I save the organization", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "RaisonSociale",
                        "The First Test Company"});
#line 9
 testRunner.When("I search with the following criteria:", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "RaisonSociale",
                        "The First Test Company"});
            table3.AddRow(new string[] {
                        "Reference",
                        "C37805E9-6D6B-49BF-B667-B74ABBC34D13"});
            table3.AddRow(new string[] {
                        "Effectif",
                        "50"});
            table3.AddRow(new string[] {
                        "FormeJuridique",
                        "SARL"});
#line 12
 testRunner.Then("The search result contains an organization with following data:", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Selecting an organization from the organization search list check that the select" +
            "ed organization details are showed")]
        [Xunit.TraitAttribute("FeatureTitle", "Organization")]
        [Xunit.TraitAttribute("Description", "Selecting an organization from the organization search list check that the select" +
            "ed organization details are showed")]
        [Xunit.TraitAttribute("Category", "IntegrationTest,")]
        [Xunit.TraitAttribute("Category", "Organization")]
        public virtual void SelectingAnOrganizationFromTheOrganizationSearchListCheckThatTheSelectedOrganizationDetailsAreShowed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Selecting an organization from the organization search list check that the select" +
                    "ed organization details are showed", new string[] {
                        "IntegrationTest,",
                        "Organization"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "RaisonSociale",
                        "Reference",
                        "Effectif",
                        "FormeJuridique"});
            table4.AddRow(new string[] {
                        "The First Test Company",
                        "C37805E9-6D6B-49BF-B667-B74ABBC34D13",
                        "50",
                        "SARL"});
            table4.AddRow(new string[] {
                        "The Second Test Company",
                        "5A8EE1A0-25BE-4E00-BEAD-A9BF76988F36",
                        "30",
                        "SARL"});
            table4.AddRow(new string[] {
                        "The Third Test Company",
                        "6A8EE1A0-25BE-4E00-BEAD-A9BF76988F36",
                        "60",
                        "SA"});
#line 21
 testRunner.Given("I create 3 organizations with following data:", ((string)(null)), table4, "Given ");
#line 26
 testRunner.And("I save these organizations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I search organizations without criteria", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RaisonSociale"});
            table5.AddRow(new string[] {
                        "The First Test Company"});
#line 28
 testRunner.When("I select the organization with the following data:", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "RaisonSociale",
                        "Reference",
                        "Effectif",
                        "FormeJuridique"});
            table6.AddRow(new string[] {
                        "The First Test Company",
                        "C37805E9-6D6B-49BF-B667-B74ABBC34D13",
                        "50",
                        "SARL"});
#line 31
 testRunner.Then("the result should be display on the screen the following data:", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                OrganizationFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                OrganizationFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
